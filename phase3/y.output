Terminals unused in grammar

   END
   FOR


Grammar

    0 $accept: prog_start $end

    1 ident: IDENT

    2 prog_start: functions
    3           | error

    4 functions: %empty
    5          | function functions

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    7 comma: %empty
    8      | COMMA identifiers

    9 identifiers: ident comma

   10 declarations: %empty
   11             | declaration SEMICOLON declarations

   12 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN
   13            | identifiers COLON INTEGER
   14            | identifiers COLON ARRAY L_SQAURE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 states: %empty
   16       | statements

   17 statements: statement SEMICOLON states

   18 statement: var ASSIGN expression
   19          | IF bool_expr THEN statements ENDIF
   20          | IF bool_expr THEN statements ELSE statements ENDIF
   21          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   23          | READ var vars
   24          | WRITE var vars
   25          | CONTINUE
   26          | RETURN expression

   27 or_expr: %empty
   28        | OR relation_and_expr or_expr

   29 and_expr: %empty
   30         | AND relation_expr and_expr

   31 bool_expr: relation_and_expr or_expr

   32 relation_and_expr: relation_expr and_expr

   33 relation_expr: expression comp expression
   34              | NOT expression comp expression
   35              | TRUE
   36              | NOT TRUE
   37              | FALSE
   38              | NOT FALSE
   39              | L_PAREN bool_expr R_PAREN
   40              | NOT L_PAREN bool_expr R_PAREN

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expressions: %empty
   48            | expression
   49            | expression COMMA expressions

   50 expr: %empty
   51     | ADD multiplicative_expr expr
   52     | SUB multiplicative_expr

   53 expression: multiplicative_expr expr

   54 mult_expr: %empty
   55          | MULT term
   56          | DIV term
   57          | MOD term

   58 multiplicative_expr: term mult_expr

   59 term: var
   60     | SUB var
   61     | NUMBER
   62     | SUB NUMBER
   63     | L_PAREN expression R_PAREN
   64     | SUB L_PAREN expression R_PAREN
   65     | ident L_PAREN expressions R_PAREN

   66 vars: %empty
   67     | COMMA var vars

   68 var: ident
   69    | ident L_SQAURE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 3
FUNCTION (258) 6
BEGIN_PARAMS (259) 6
END (260)
END_PARAMS (261) 6
BEGIN_LOCALS (262) 6
END_LOCALS (263) 6
BEGIN_BODY (264) 6
END_BODY (265) 6
INTEGER (266) 13 14
ARRAY (267) 14
ENUM (268) 12
OF (269) 14
IF (270) 19 20
THEN (271) 19 20
ENDIF (272) 19 20
ELSE (273) 20
FOR (274)
WHILE (275) 21 22
DO (276) 22
BEGINLOOP (277) 21 22
ENDLOOP (278) 21 22
READ (279) 23
WRITE (280) 24
TRUE (281) 35 36
FALSE (282) 37 38
RETURN (283) 26
COLON (284) 12 13 14
COMMA (285) 8 49 67
SEMICOLON (286) 6 11 17
CONTINUE (287) 25
IDENT (288) 1
NUMBER (289) 14 61 62
ASSIGN (290) 18
OR (291) 28
AND (292) 30
NOT (293) 34 36 38 40
LT (294) 43
LTE (295) 45
GT (296) 44
GTE (297) 46
EQ (298) 41
NEQ (299) 42
ADD (300) 51
SUB (301) 52 60 62 64
MULT (302) 55
DIV (303) 56
MOD (304) 57
L_SQAURE_BRACKET (305) 14 69
R_SQUARE_BRACKET (306) 14 69
L_PAREN (307) 12 39 40 63 64 65
R_PAREN (308) 12 39 40 63 64 65


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
ident (55)
    on left: 1, on right: 6 9 65 68 69
prog_start (56)
    on left: 2 3, on right: 0
functions (57)
    on left: 4 5, on right: 2 5
function (58)
    on left: 6, on right: 5
comma (59)
    on left: 7 8, on right: 9
identifiers (60)
    on left: 9, on right: 8 12 13 14
declarations (61)
    on left: 10 11, on right: 6 11
declaration (62)
    on left: 12 13 14, on right: 11
states (63)
    on left: 15 16, on right: 17
statements (64)
    on left: 17, on right: 6 16 19 20 21 22
statement (65)
    on left: 18 19 20 21 22 23 24 25 26, on right: 17
or_expr (66)
    on left: 27 28, on right: 28 31
and_expr (67)
    on left: 29 30, on right: 30 32
bool_expr (68)
    on left: 31, on right: 19 20 21 22 39 40
relation_and_expr (69)
    on left: 32, on right: 28 31
relation_expr (70)
    on left: 33 34 35 36 37 38 39 40, on right: 30 32
comp (71)
    on left: 41 42 43 44 45 46, on right: 33 34
expressions (72)
    on left: 47 48 49, on right: 49 65
expr (73)
    on left: 50 51 52, on right: 51 53
expression (74)
    on left: 53, on right: 18 26 33 34 48 49 63 64 69
mult_expr (75)
    on left: 54 55 56 57, on right: 58
multiplicative_expr (76)
    on left: 58, on right: 51 52 53
term (77)
    on left: 59 60 61 62 63 64 65, on right: 55 56 57 58
vars (78)
    on left: 66 67, on right: 23 24 67
var (79)
    on left: 68 69, on right: 18 23 24 59 60 67


State 0

    0 $accept: . prog_start $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 4 (functions)

    prog_start  go to state 3
    functions   go to state 4
    function    go to state 5


State 1

    3 prog_start: error .

    $default  reduce using rule 3 (prog_start)


State 2

    6 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    ident  go to state 7


State 3

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 4

    2 prog_start: functions .

    $default  reduce using rule 2 (prog_start)


State 5

    5 functions: function . functions

    FUNCTION  shift, and go to state 2

    $default  reduce using rule 4 (functions)

    functions  go to state 9
    function   go to state 5


State 6

    1 ident: IDENT .

    $default  reduce using rule 1 (ident)


State 7

    6 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    5 functions: function functions .

    $default  reduce using rule 5 (functions)


State 10

    6 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    ident         go to state 12
    identifiers   go to state 13
    declarations  go to state 14
    declaration   go to state 15


State 12

    9 identifiers: ident . comma

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (comma)

    comma  go to state 17


State 13

   12 declaration: identifiers . COLON ENUM L_PAREN identifiers R_PAREN
   13            | identifiers . COLON INTEGER
   14            | identifiers . COLON ARRAY L_SQAURE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 14

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 19


State 15

   11 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 20


State 16

    8 comma: COMMA . identifiers

    IDENT  shift, and go to state 6

    ident        go to state 12
    identifiers  go to state 21


State 17

    9 identifiers: ident comma .

    $default  reduce using rule 9 (identifiers)


State 18

   12 declaration: identifiers COLON . ENUM L_PAREN identifiers R_PAREN
   13            | identifiers COLON . INTEGER
   14            | identifiers COLON . ARRAY L_SQAURE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23
    ENUM     shift, and go to state 24


State 19

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 20

   11 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    ident         go to state 12
    identifiers   go to state 13
    declarations  go to state 26
    declaration   go to state 15


State 21

    8 comma: COMMA identifiers .

    $default  reduce using rule 8 (comma)


State 22

   13 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 23

   14 declaration: identifiers COLON ARRAY . L_SQAURE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQAURE_BRACKET  shift, and go to state 27


State 24

   12 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 28


State 25

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    ident         go to state 12
    identifiers   go to state 13
    declarations  go to state 29
    declaration   go to state 15


State 26

   11 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 11 (declarations)


State 27

   14 declaration: identifiers COLON ARRAY L_SQAURE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 28

   12 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 6

    ident        go to state 12
    identifiers  go to state 31


State 29

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 32


State 30

   14 declaration: identifiers COLON ARRAY L_SQAURE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

   12 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 34


State 32

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 35


State 33

   14 declaration: identifiers COLON ARRAY L_SQAURE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 36


State 34

   12 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 12 (declaration)


State 35

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statements  go to state 45
    statement   go to state 46
    var         go to state 47


State 36

   14 declaration: identifiers COLON ARRAY L_SQAURE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 48


State 37

   19 statement: IF . bool_expr THEN statements ENDIF
   20          | IF . bool_expr THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54

    ident                go to state 55
    bool_expr            go to state 56
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 38

   21 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54

    ident                go to state 55
    bool_expr            go to state 63
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 39

   22 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 64


State 40

   23 statement: READ . var vars

    IDENT  shift, and go to state 6

    ident  go to state 44
    var    go to state 65


State 41

   24 statement: WRITE . var vars

    IDENT  shift, and go to state 6

    ident  go to state 44
    var    go to state 66


State 42

   26 statement: RETURN . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    expression           go to state 68
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 43

   25 statement: CONTINUE .

    $default  reduce using rule 25 (statement)


State 44

   68 var: ident .
   69    | ident . L_SQAURE_BRACKET expression R_SQUARE_BRACKET

    L_SQAURE_BRACKET  shift, and go to state 69

    $default  reduce using rule 68 (var)


State 45

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 70


State 46

   17 statements: statement . SEMICOLON states

    SEMICOLON  shift, and go to state 71


State 47

   18 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 72


State 48

   14 declaration: identifiers COLON ARRAY L_SQAURE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (declaration)


State 49

   35 relation_expr: TRUE .

    $default  reduce using rule 35 (relation_expr)


State 50

   37 relation_expr: FALSE .

    $default  reduce using rule 37 (relation_expr)


State 51

   61 term: NUMBER .

    $default  reduce using rule 61 (term)


State 52

   34 relation_expr: NOT . expression comp expression
   36              | NOT . TRUE
   38              | NOT . FALSE
   40              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 73
    FALSE    shift, and go to state 74
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 75

    ident                go to state 55
    expression           go to state 76
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 53

   60 term: SUB . var
   62     | SUB . NUMBER
   64     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 77
    L_PAREN  shift, and go to state 78

    ident  go to state 44
    var    go to state 79


State 54

   39 relation_expr: L_PAREN . bool_expr R_PAREN
   63 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54

    ident                go to state 55
    bool_expr            go to state 80
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 81
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 55

   65 term: ident . L_PAREN expressions R_PAREN
   68 var: ident .
   69    | ident . L_SQAURE_BRACKET expression R_SQUARE_BRACKET

    L_SQAURE_BRACKET  shift, and go to state 69
    L_PAREN           shift, and go to state 82

    $default  reduce using rule 68 (var)


State 56

   19 statement: IF bool_expr . THEN statements ENDIF
   20          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 83


State 57

   31 bool_expr: relation_and_expr . or_expr

    OR  shift, and go to state 84

    $default  reduce using rule 27 (or_expr)

    or_expr  go to state 85


State 58

   32 relation_and_expr: relation_expr . and_expr

    AND  shift, and go to state 86

    $default  reduce using rule 29 (and_expr)

    and_expr  go to state 87


State 59

   33 relation_expr: expression . comp expression

    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    comp  go to state 94


State 60

   53 expression: multiplicative_expr . expr

    ADD  shift, and go to state 95
    SUB  shift, and go to state 96

    $default  reduce using rule 50 (expr)

    expr  go to state 97


State 61

   58 multiplicative_expr: term . mult_expr

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 54 (mult_expr)

    mult_expr  go to state 101


State 62

   59 term: var .

    $default  reduce using rule 59 (term)


State 63

   21 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 102


State 64

   22 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statements  go to state 103
    statement   go to state 46
    var         go to state 47


State 65

   23 statement: READ var . vars

    COMMA  shift, and go to state 104

    $default  reduce using rule 66 (vars)

    vars  go to state 105


State 66

   24 statement: WRITE var . vars

    COMMA  shift, and go to state 104

    $default  reduce using rule 66 (vars)

    vars  go to state 106


State 67

   63 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    expression           go to state 107
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 68

   26 statement: RETURN expression .

    $default  reduce using rule 26 (statement)


State 69

   69 var: ident L_SQAURE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    expression           go to state 108
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 70

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 71

   17 statements: statement SEMICOLON . states

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IDENT     shift, and go to state 6

    $default  reduce using rule 15 (states)

    ident       go to state 44
    states      go to state 109
    statements  go to state 110
    statement   go to state 46
    var         go to state 47


State 72

   18 statement: var ASSIGN . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    expression           go to state 111
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 73

   36 relation_expr: NOT TRUE .

    $default  reduce using rule 36 (relation_expr)


State 74

   38 relation_expr: NOT FALSE .

    $default  reduce using rule 38 (relation_expr)


State 75

   40 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   63 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54

    ident                go to state 55
    bool_expr            go to state 112
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 81
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 76

   34 relation_expr: NOT expression . comp expression

    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    comp  go to state 113


State 77

   62 term: SUB NUMBER .

    $default  reduce using rule 62 (term)


State 78

   64 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    expression           go to state 114
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 79

   60 term: SUB var .

    $default  reduce using rule 60 (term)


State 80

   39 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 115


State 81

   33 relation_expr: expression . comp expression
   63 term: L_PAREN expression . R_PAREN

    LT       shift, and go to state 88
    LTE      shift, and go to state 89
    GT       shift, and go to state 90
    GTE      shift, and go to state 91
    EQ       shift, and go to state 92
    NEQ      shift, and go to state 93
    R_PAREN  shift, and go to state 116

    comp  go to state 94


State 82

   65 term: ident L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    $default  reduce using rule 47 (expressions)

    ident                go to state 55
    expressions          go to state 117
    expression           go to state 118
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 83

   19 statement: IF bool_expr THEN . statements ENDIF
   20          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statements  go to state 119
    statement   go to state 46
    var         go to state 47


State 84

   28 or_expr: OR . relation_and_expr or_expr

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54

    ident                go to state 55
    relation_and_expr    go to state 120
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 85

   31 bool_expr: relation_and_expr or_expr .

    $default  reduce using rule 31 (bool_expr)


State 86

   30 and_expr: AND . relation_expr and_expr

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54

    ident                go to state 55
    relation_expr        go to state 121
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 87

   32 relation_and_expr: relation_expr and_expr .

    $default  reduce using rule 32 (relation_and_expr)


State 88

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 89

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 90

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 91

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 92

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 93

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 94

   33 relation_expr: expression comp . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    expression           go to state 122
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 95

   51 expr: ADD . multiplicative_expr expr

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    multiplicative_expr  go to state 123
    term                 go to state 61
    var                  go to state 62


State 96

   52 expr: SUB . multiplicative_expr

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    multiplicative_expr  go to state 124
    term                 go to state 61
    var                  go to state 62


State 97

   53 expression: multiplicative_expr expr .

    $default  reduce using rule 53 (expression)


State 98

   55 mult_expr: MULT . term

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident  go to state 55
    term   go to state 125
    var    go to state 62


State 99

   56 mult_expr: DIV . term

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident  go to state 55
    term   go to state 126
    var    go to state 62


State 100

   57 mult_expr: MOD . term

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident  go to state 55
    term   go to state 127
    var    go to state 62


State 101

   58 multiplicative_expr: term mult_expr .

    $default  reduce using rule 58 (multiplicative_expr)


State 102

   21 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statements  go to state 128
    statement   go to state 46
    var         go to state 47


State 103

   22 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 129


State 104

   67 vars: COMMA . var vars

    IDENT  shift, and go to state 6

    ident  go to state 44
    var    go to state 130


State 105

   23 statement: READ var vars .

    $default  reduce using rule 23 (statement)


State 106

   24 statement: WRITE var vars .

    $default  reduce using rule 24 (statement)


State 107

   63 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 116


State 108

   69 var: ident L_SQAURE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 131


State 109

   17 statements: statement SEMICOLON states .

    $default  reduce using rule 17 (statements)


State 110

   16 states: statements .

    $default  reduce using rule 16 (states)


State 111

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 112

   40 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 132


State 113

   34 relation_expr: NOT expression comp . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    ident                go to state 55
    expression           go to state 133
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 114

   64 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 134


State 115

   39 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 39 (relation_expr)


State 116

   63 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (term)


State 117

   65 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 135


State 118

   48 expressions: expression .
   49            | expression . COMMA expressions

    COMMA  shift, and go to state 136

    $default  reduce using rule 48 (expressions)


State 119

   19 statement: IF bool_expr THEN statements . ENDIF
   20          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 137
    ELSE   shift, and go to state 138


State 120

   28 or_expr: OR relation_and_expr . or_expr

    OR  shift, and go to state 84

    $default  reduce using rule 27 (or_expr)

    or_expr  go to state 139


State 121

   30 and_expr: AND relation_expr . and_expr

    AND  shift, and go to state 86

    $default  reduce using rule 29 (and_expr)

    and_expr  go to state 140


State 122

   33 relation_expr: expression comp expression .

    $default  reduce using rule 33 (relation_expr)


State 123

   51 expr: ADD multiplicative_expr . expr

    ADD  shift, and go to state 95
    SUB  shift, and go to state 96

    $default  reduce using rule 50 (expr)

    expr  go to state 141


State 124

   52 expr: SUB multiplicative_expr .

    $default  reduce using rule 52 (expr)


State 125

   55 mult_expr: MULT term .

    $default  reduce using rule 55 (mult_expr)


State 126

   56 mult_expr: DIV term .

    $default  reduce using rule 56 (mult_expr)


State 127

   57 mult_expr: MOD term .

    $default  reduce using rule 57 (mult_expr)


State 128

   21 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 142


State 129

   22 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 143


State 130

   67 vars: COMMA var . vars

    COMMA  shift, and go to state 104

    $default  reduce using rule 66 (vars)

    vars  go to state 144


State 131

   69 var: ident L_SQAURE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 69 (var)


State 132

   40 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 40 (relation_expr)


State 133

   34 relation_expr: NOT expression comp expression .

    $default  reduce using rule 34 (relation_expr)


State 134

   64 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 64 (term)


State 135

   65 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 65 (term)


State 136

   49 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 67

    $default  reduce using rule 47 (expressions)

    ident                go to state 55
    expressions          go to state 145
    expression           go to state 118
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 137

   19 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 19 (statement)


State 138

   20 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statements  go to state 146
    statement   go to state 46
    var         go to state 47


State 139

   28 or_expr: OR relation_and_expr or_expr .

    $default  reduce using rule 28 (or_expr)


State 140

   30 and_expr: AND relation_expr and_expr .

    $default  reduce using rule 30 (and_expr)


State 141

   51 expr: ADD multiplicative_expr expr .

    $default  reduce using rule 51 (expr)


State 142

   21 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 143

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 51
    NOT      shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54

    ident                go to state 55
    bool_expr            go to state 147
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    var                  go to state 62


State 144

   67 vars: COMMA var vars .

    $default  reduce using rule 67 (vars)


State 145

   49 expressions: expression COMMA expressions .

    $default  reduce using rule 49 (expressions)


State 146

   20 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 148


State 147

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 22 (statement)


State 148

   20 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 20 (statement)
